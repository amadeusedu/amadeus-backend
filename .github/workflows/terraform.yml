name: Terraform Blue-Green Deploy

on:
  pull_request:
  push:
    branches:
      - staging
      - main

jobs:
  terraform:
    runs-on: ubuntu-latest
    env:
      TF_CLI_ARGS: "-no-color"

    defaults:
      run:
        shell: bash
        working-directory: infra/gateway   # all terraform commands run here

    steps:
      # 1. Checkout code
      - uses: actions/checkout@v3

      # 2. Install Terraform CLI
      - uses: hashicorp/setup-terraform@v2

      # 3. Select (or create) workspace
      - name: Select workspace
        id: ws
        run: |
          if [[ "${GITHUB_REF##*/}" == "main" ]]; then
            WS=production
          else
            WS=staging
          fi

          # create workspace if it doesn't exist
          terraform workspace list | grep -q "$WS" || terraform workspace new "$WS"
          terraform workspace select "$WS"

          echo "ws=$WS" >> "$GITHUB_OUTPUT"

      # 4. Terraform init
      - name: Terraform init
        run: terraform init -reconfigure
      # 5. Determine next colour (blue â‡„ green)
      - name: Decide colour
        id: colour
        run: |
          if [[ "${{ steps.ws.outputs.ws }}" == "production" ]]; then
            CURRENT=$(terraform state show aws_apigatewayv2_stage.bg_stage 2>/dev/null | awk '/name/ {print $3}')
            [[ "$CURRENT" == "blue" ]] && NEXT=green || NEXT=blue
          else
            NEXT=blue
          fi
          echo "Deploying colour: $NEXT"
          echo "next=$NEXT" >> "$GITHUB_OUTPUT"
      # 6. Plan on pull-request
      - name: Terraform plan
        if: ${{ github.event_name == 'pull_request' }}
        run: |
          terraform plan \
            -var="environment=${{ steps.ws.outputs.ws }}" \
            -var="deployment_color=${{ steps.colour.outputs.next }}"
      # 7. Apply on push to staging / main
      - name: Terraform apply
        if: ${{ github.event_name == 'push' }}
        run: |
          terraform apply -auto-approve \
            -var="environment=${{ steps.ws.outputs.ws }}" \
            -var="deployment_color=${{ steps.colour.outputs.next }}"
