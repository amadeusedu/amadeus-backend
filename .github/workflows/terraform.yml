name: Terraform Blue-Green Deploy

on:
  pull_request:
  push:
    branches: [staging, main]

jobs:
  terraform:
    runs-on: ubuntu-latest
    env:
      TF_CLI_ARGS: "-no-color"

    steps:
      # 1. Check out code
      - uses: actions/checkout@v3

      # 2. Install Terraform CLI
      - uses: hashicorp/setup-terraform@v2

      # 3. Select or create the correct workspace
      - name: Select workspace (staging or production)
        id: ws
        run: |
          if [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
            WS=production
          else
            WS=staging
          fi
          terraform -chdir=infra/gateway workspace list | grep -q "$WS" || terraform -chdir=infra/gateway workspace new "$WS"
          terraform -chdir=infra/gateway workspace select "$WS"
          echo "ws=$WS" >> "$GITHUB_OUTPUT"

      # 4. Init Terraform inside infra/gateway
      - name: Terraform init
        run: terraform -chdir=infra/gateway init -reconfigure

      # 5. Decide which colour to deploy
      - name: Decide next colour
        id: color
        run: |
          if [[ "${{ steps.ws.outputs.ws }}" == "production" ]]; then
            CURRENT=$(terraform -chdir=infra/gateway state show aws_apigatewayv2_stage.bg_stage 2>/dev/null | awk '/name/ {print $3}')
            [[ "$CURRENT" == "blue" ]] && NEXT=green || NEXT=blue
          else
            NEXT=blue
          fi
          echo "next=$NEXT" >> "$GITHUB_OUTPUT"

      # 6. Plan on pull-request events
      - name: Terraform plan
        if: github.event_name == 'pull_request'
        run: |
          terraform -chdir=infra/gateway plan \
            -var="environment=${{ steps.ws.outputs.ws }}" \
            -var="deployment_color=${{ steps.color.outputs.next }}"

      # 7. Apply on pushes to staging / main
      - name: Terraform apply
        if: github.event_name == 'push'
        run: |
          terraform -chdir=infra/gateway apply -auto-approve \
            -var="environment=${{ steps.ws.outputs.ws }}" \
            -var="deployment_color=${{ steps.color.outputs.next }}"
